<div class="container my-4">
    <div class="row">
        <div class="col-12 col-md-8 offset-md-2">
            <div class="card">
                <!-- Header -->
                <div class="card-header">
                    <h5 class="mb-0">Chat</h5>
                </div>

                <!-- Scrollable Chat Body -->
                <div class="card-body" style="max-height: 300px; overflow-y: auto;">
                    @if (Messages != null && Messages.Any())
                    {
                        @foreach (var message in Messages)
                        {
                            <div class="d-flex mb-2 p-2 bg-opacity-10 rounded @(message.Role == "User" ? "col-8 offset-4 bg-primary justify-content-end" : "col-8 bg-success justify-content-start")">
                                @message.Content
                            </div>
                        }
                    }
                    else
                    {
                        <p class="text-muted">No messages yet. Start the conversation!</p>
                    }
                </div>

                <!-- Input Footer -->
                <div class="card-footer">
                    <div class="input-group">
                        <input class="form-control"
                               @bind="NewMessage"
                               @bind:event="oninput"
                               placeholder="Type your message..." 
                               @onkeydown="@(e => OnKeyDown(e))" />
                        <button class="btn btn-primary" @onclick="SendMessage">
                            Send
                        </button>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

@code {
    private List<ChatMessage> Messages = new();
    private string NewMessage = string.Empty;

    protected override void OnInitialized()
    {
        // Add a few sample messages
        Messages.Add(new ChatMessage { Role = "User", Content = "Hello from Alice!" });
        Messages.Add(new ChatMessage { Role = "Assistant", Content = "Hi, I'm Bob." });
    }

    private void SendMessage()
    {
        if (!string.IsNullOrWhiteSpace(NewMessage))
        {
            Messages.Add(new ChatMessage { Role = "User", Content = NewMessage });
            NewMessage = string.Empty;
        }
    }

    private void OnKeyDown(KeyboardEventArgs e)
    {
        if (e.Key == "Enter")
        {
            SendMessage();
        }
    }

    // Simple message model
    private class ChatMessage
    {
        public string Role { get; set; } = default!;
        public string Content { get; set; } = default!;
    }
}
